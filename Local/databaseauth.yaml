## did not work ##
##################
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo-replica
  # namespace: ingress-nginx
spec:
  serviceName: mongo
  replicas: 3
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo
        image: mongo:latest
        ports:
        - name: mongod-port
          containerPort: 27017
        env:
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: db-username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: db-password
        command: ["/bin/sh"]
        args: ["-c", "mongod --replSet=rs0 --auth --bind_ip_all"]
        volumeMounts:
        - name: mongo-data
          mountPath: /data/db
      initContainers:
      - name: mongo-init
        image: mongo:latest
        command:
        - bash
        - -c
        - >
          echo "Initialzing mongo ...";
          mongod --replSet=rs0 --bind_ip_all;
          until mongo --eval "print(\"waiting for connection..\")"; do sleep 20; done;
          mongo --eval "
            rs.initiate({
                _id: 'rs0',
                members: [
                { _id: 0, host: 'mongo-replica-0.mongo:27017'},
                { _id: 1, host: 'mongo-replica-1.mongo:27017'},
                { _id: 2, host: 'mongo-replica-2.mongo:27017'}
                ]
                });
            while (!rs.isMaster().ismaster) { sleep (50); }
            admin = db.getSiblingDB('admin');
            admin.createUser({ user: process.env.DB_USERNAME, pwd: process.env.DB_PASSWORD, roles: [ { role: 'root', db: 'admin'}]});
           ";
        env:
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: db-username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: db-password
        volumeMounts:
        - name: mongo-data
          mountPath: /data/db
  volumeClaimTemplates:
  - metadata:
      name: mongo-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  # namespace: ingress-nginx
  labels:
    name: mongo
spec:
  ports:
    - port: 27017
      targetPort: 27017
  clusterIP: None
  selector:
    app: mongo
    
---
apiVersion: v1
kind: Secret
metadata:
  name: mongo-secret
  # namespace: ingress-nginx
type: Opaque
data:
  db-username: cm9vdA== # base64 encoded "root"
  db-password: cGFzc3dvcmQ= # base64 encoded "password"
